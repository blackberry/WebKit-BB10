Test src property parsing in the @-webkit-filter at-rule.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



========================================
URLs without format tests.
========================================

One URL without format.
src: url(shader.vs);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs)"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 1
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs)"

Two URLs without format.
src: url(shader.vs), url(shader.fs);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs), url(shader.fs)"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 2
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs)"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs)"

Three URLs without format.
src: url(shader.vs), url(shader.fs), url(shader3);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs), url(shader.fs), url(shader3)"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 3
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs)"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs)"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader3)"

========================================
URLs with format tests.
========================================

One URL with format.
src: url(shader.vs) format('x-shader/x-vertex');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 1
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"

Two URLs with format.
src: url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 2
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs) format('x-shader/x-fragment')"

Three URLs with format.
src: url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment'), url(shader3) format('unknown');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment'), url(shader3) format('unknown')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 3
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs) format('x-shader/x-fragment')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader3) format('unknown')"

========================================
Mixed URLs with and without format tests.
========================================

Three URLs. Middle URL without format.
src: url(shader.vs) format('x-shader/x-vertex'), url(shader.fs), url(shader3) format('unknown');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex'), url(shader.fs), url(shader3) format('unknown')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 3
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs)"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader3) format('unknown')"

Three URLs. First and last URLs without format.
src: url(shader.vs), url(shader.fs) format('x-shader/x-fragment'), url(shader3);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs), url(shader.fs) format('x-shader/x-fragment'), url(shader3)"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 3
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs)"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs) format('x-shader/x-fragment')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader3)"

========================================
Capitalization tests.
========================================

All tokens capitalized.
src: URL(SHADER.VS) FORMAT('X-SHADER/X-VERTEX');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(SHADER.VS) format('X-SHADER/X-VERTEX')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 1
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(SHADER.VS) format('X-SHADER/X-VERTEX')"

========================================
Whitespace tests.
========================================

Extra leading, middle, and trailing whitespace. 
src:    url(shader.vs)   format('x-shader/x-vertex')   ,   url(shader.fs)   format('x-shader/x-fragment')   ;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 2
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs) format('x-shader/x-fragment')"

No whitespace around comma.
src: url(shader.vs) format('x-shader/x-vertex'),url(shader.fs) format('x-shader/x-fragment');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex'), url(shader.fs) format('x-shader/x-fragment')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 2
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.fs) format('x-shader/x-fragment')"

No whitespace between URL and format.
src: url(shader.vs)format('x-shader/x-vertex');
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('src')) is "url(shader.vs) format('x-shader/x-vertex')"
PASS srcPropertyValue instanceof CSSValueList is true
PASS srcPropertyValue.constructor === CSSValueList is true
PASS srcPropertyValue.__proto__ === CSSValueList.prototype is true
PASS srcPropertyValue.length is 1
PASS subValue instanceof CSSValue is true
PASS subValue.constructor === CSSValue is true
PASS subValue.__proto__ === CSSValue.prototype is true
PASS subValue.cssValueType is CSSValue.CSS_CUSTOM
PASS removeBaseURL(subValue.cssText) is "url(shader.vs) format('x-shader/x-vertex')"
PASS successfullyParsed is true

TEST COMPLETE

